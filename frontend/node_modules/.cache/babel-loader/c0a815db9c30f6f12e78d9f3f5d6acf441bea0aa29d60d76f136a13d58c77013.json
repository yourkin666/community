{"ast":null,"code":"import { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { initComponentToken, initInputToken } from './token';\n// =============================== OTP ================================\nconst genOTPStyle = token => {\n  const {\n    componentCls,\n    paddingXS\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      flexWrap: 'nowrap',\n      columnGap: paddingXS,\n      [`${componentCls}-input-wrapper`]: {\n        position: 'relative',\n        [`${componentCls}-mask-icon`]: {\n          position: 'absolute',\n          zIndex: '1',\n          top: '50%',\n          right: '50%',\n          transform: 'translate(50%, -50%)',\n          pointerEvents: 'none'\n        },\n        [`${componentCls}-mask-input`]: {\n          color: 'transparent',\n          caretColor: token.colorText\n        },\n        [`${componentCls}-mask-input[type=number]::-webkit-inner-spin-button`]: {\n          '-webkit-appearance': 'none',\n          margin: 0\n        },\n        [`${componentCls}-mask-input[type=number]`]: {\n          '-moz-appearance': 'textfield'\n        }\n      },\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`${componentCls}-input`]: {\n        textAlign: 'center',\n        paddingInline: token.paddingXXS\n      },\n      // ================= Size =================\n      [`&${componentCls}-sm ${componentCls}-input`]: {\n        paddingInline: token.calc(token.paddingXXS).div(2).equal()\n      },\n      [`&${componentCls}-lg ${componentCls}-input`]: {\n        paddingInline: token.paddingXS\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks(['Input', 'OTP'], token => {\n  const inputToken = mergeToken(token, initInputToken(token));\n  return genOTPStyle(inputToken);\n}, initComponentToken);","map":{"version":3,"names":["genStyleHooks","mergeToken","initComponentToken","initInputToken","genOTPStyle","token","componentCls","paddingXS","display","alignItems","flexWrap","columnGap","position","zIndex","top","right","transform","pointerEvents","color","caretColor","colorText","margin","direction","textAlign","paddingInline","paddingXXS","calc","div","equal","inputToken"],"sources":["/root/community/frontend/node_modules/antd/es/input/style/otp.js"],"sourcesContent":["import { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { initComponentToken, initInputToken } from './token';\n// =============================== OTP ================================\nconst genOTPStyle = token => {\n  const {\n    componentCls,\n    paddingXS\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      flexWrap: 'nowrap',\n      columnGap: paddingXS,\n      [`${componentCls}-input-wrapper`]: {\n        position: 'relative',\n        [`${componentCls}-mask-icon`]: {\n          position: 'absolute',\n          zIndex: '1',\n          top: '50%',\n          right: '50%',\n          transform: 'translate(50%, -50%)',\n          pointerEvents: 'none'\n        },\n        [`${componentCls}-mask-input`]: {\n          color: 'transparent',\n          caretColor: token.colorText\n        },\n        [`${componentCls}-mask-input[type=number]::-webkit-inner-spin-button`]: {\n          '-webkit-appearance': 'none',\n          margin: 0\n        },\n        [`${componentCls}-mask-input[type=number]`]: {\n          '-moz-appearance': 'textfield'\n        }\n      },\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`${componentCls}-input`]: {\n        textAlign: 'center',\n        paddingInline: token.paddingXXS\n      },\n      // ================= Size =================\n      [`&${componentCls}-sm ${componentCls}-input`]: {\n        paddingInline: token.calc(token.paddingXXS).div(2).equal()\n      },\n      [`&${componentCls}-lg ${componentCls}-input`]: {\n        paddingInline: token.paddingXS\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks(['Input', 'OTP'], token => {\n  const inputToken = mergeToken(token, initInputToken(token));\n  return genOTPStyle(inputToken);\n}, initComponentToken);"],"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,sBAAsB;AAChE,SAASC,kBAAkB,EAAEC,cAAc,QAAQ,SAAS;AAC5D;AACA,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAC3B,MAAM;IACJC,YAAY;IACZC;EACF,CAAC,GAAGF,KAAK;EACT,OAAO;IACL,CAACC,YAAY,GAAG;MACdE,OAAO,EAAE,aAAa;MACtBC,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,SAAS,EAAEJ,SAAS;MACpB,CAAC,GAAGD,YAAY,gBAAgB,GAAG;QACjCM,QAAQ,EAAE,UAAU;QACpB,CAAC,GAAGN,YAAY,YAAY,GAAG;UAC7BM,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAE,GAAG;UACXC,GAAG,EAAE,KAAK;UACVC,KAAK,EAAE,KAAK;UACZC,SAAS,EAAE,sBAAsB;UACjCC,aAAa,EAAE;QACjB,CAAC;QACD,CAAC,GAAGX,YAAY,aAAa,GAAG;UAC9BY,KAAK,EAAE,aAAa;UACpBC,UAAU,EAAEd,KAAK,CAACe;QACpB,CAAC;QACD,CAAC,GAAGd,YAAY,qDAAqD,GAAG;UACtE,oBAAoB,EAAE,MAAM;UAC5Be,MAAM,EAAE;QACV,CAAC;QACD,CAAC,GAAGf,YAAY,0BAA0B,GAAG;UAC3C,iBAAiB,EAAE;QACrB;MACF,CAAC;MACD,OAAO,EAAE;QACPgB,SAAS,EAAE;MACb,CAAC;MACD,CAAC,GAAGhB,YAAY,QAAQ,GAAG;QACzBiB,SAAS,EAAE,QAAQ;QACnBC,aAAa,EAAEnB,KAAK,CAACoB;MACvB,CAAC;MACD;MACA,CAAC,IAAInB,YAAY,OAAOA,YAAY,QAAQ,GAAG;QAC7CkB,aAAa,EAAEnB,KAAK,CAACqB,IAAI,CAACrB,KAAK,CAACoB,UAAU,CAAC,CAACE,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;MAC3D,CAAC;MACD,CAAC,IAAItB,YAAY,OAAOA,YAAY,QAAQ,GAAG;QAC7CkB,aAAa,EAAEnB,KAAK,CAACE;MACvB;IACF;EACF,CAAC;AACH,CAAC;AACD;AACA,eAAeP,aAAa,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,EAAEK,KAAK,IAAI;EACtD,MAAMwB,UAAU,GAAG5B,UAAU,CAACI,KAAK,EAAEF,cAAc,CAACE,KAAK,CAAC,CAAC;EAC3D,OAAOD,WAAW,CAACyB,UAAU,CAAC;AAChC,CAAC,EAAE3B,kBAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}